{
  "hash": "afbc2354978eb3f710b0727af1de9696",
  "result": {
    "markdown": "---\ntitle: Hacking GLMs to fit population growth models\nauthor: Eric R. Scott\ndate: '2020-02-24'\n# slug: hacking-glms\ncategories:\n  - r\n  - modeling\ndraft: no\n# math: yes\n---\n\n\nI'm currently teaching Ecological Statistics and Data, a class I inherited from [Lee Brown](http://ase.tufts.edu/biology/labs/crone/cronies) and [Elizabeth Crone](https://ase.tufts.edu/biology/faculty/crone/).\nIn a lecture on population dynamics, they do some really cool things with generalized linear model---things that I don't think are standard practice and as far as I can tell from googling, aren't well documented.\nAnd let me tell you, I did a **lot** of googling to make sure I understood this stuff before teaching it.\nSo, I thought I'd put it up on the blog for others.\n\n# Data\n\nI'll be using data on the Northern Rocky Mountain grey wolf population.\nYou can read more about the history of these wolves [here](https://www.justice.gov/enrd/northern-rocky-mountain-gray-wolves).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nwolves <- read_csv(\"NRMwolves.csv\") %>%\n  mutate(year_post = year - 1982) \nhead(wolves)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 8\n   year num.wolves MT.wolves WY.wolves ID.wolves OR.wolves WA.wolves year_post\n  <dbl>      <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl>\n1  1982          8         8        NA        NA        NA        NA         0\n2  1983          6         6        NA        NA        NA        NA         1\n3  1984          6         6        NA        NA        NA        NA         2\n4  1985         13        13        NA        NA        NA        NA         3\n5  1986         15        15        NA        NA        NA        NA         4\n6  1987         10        10        NA        NA        NA        NA         5\n```\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n# Exponential growth\n\nExponential growth describes unregulated reproduction and is described by the equation:\n\n$$\nN_{T} = \\lambda^TN_0\n$$\n\nwhere $\\lambda$ is the population growth rate, $T$ is a number of time steps (e.g. years) and $N_0$ is the population at some initial time.\n\n## Hacking an exponential growth rate GLM\n\nWe can take advantage of a log-link to linearize this equation:\n\n$$\nlog(N_T) = log(N_0) + log(\\lambda)\\times T\n$$\n\nCompare to a generic GLM equation with a log-link:\n\n$$\nlog(y)= \\beta_0 + \\beta_1x_1\n$$\n\nHere's the glm for an exponential growth model fit to the wolf data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm_exp <- glm(num.wolves ~ year_post, \n             family = poisson(link = \"log\"), data = wolves)\nexp(coef(m_exp))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)   year_post \n  19.615307    1.176583 \n```\n:::\n:::\n\n\nThe backtransformed intercept is the estimate for $N_0$, the estimated number of wolves at `year_post` = 0\n\nThe backtransformed coefficient for `year_post` = $\\lambda$, the population growth rate\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n# Process error\n\nThe exponential growth model fit above is an observation error model.\nIt assumes variation from predicted values are due to inaccuracies in estimating the number of wolves.\n\nA process error model estimates a population growth that depends on current population size.\nThis can be modeled as a rate, $N_{t+1}/N_{t}$.\n\n## Hacking a process error GLM\n\nAgain, we can use a log-link to linearize this:\n\n$$\nlog(N_{t+1}/N_{t}) = \\beta_0\n$$\n\n$$\nlog(N_{t+1}) +log(N_{t}) = \\beta_0\n$$ $$\nlog(N_{t+1}) = \\beta_0 + log(N_{t})\n$$\n\nThe $log(N_t)$ term, which has no coefficient associated with it, is an **offset**.\nWe can hack a glm to fit this model like so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwolves2 <- wolves %>%\n  mutate(num.prev = lag(num.wolves)) %>% #create a column of lagged wolf numbers\n  filter(!is.na(num.prev))\n\nm_process <- glm(num.wolves ~ 1, offset = log(num.prev),\n                 family = poisson(link = \"log\"), data = wolves2)\n```\n:::\n\n\nThe backtransformed intercept is the yearly rate of increase ($N_{t+1}/N_t$)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp(coef(m_process))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept) \n   1.108238 \n```\n:::\n:::\n\n\n$$\nN_{t+1} = e^{\\beta_0} \\times N_{t}\n$$\n\nSo, if there are 13 wolves in 1985, how many would it predict in 1986?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1.108238 * 13\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 14.40709\n```\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n# Ricker model\n\nFinally, the most complicated, possibly mind blowing example of hacking a GLM.\nThis one took me quite a while to wrap my head around.\n\nA Ricker model takes carrying capacity into account and allows growth rate to change as the population increases.\nIt approximates logistic growth.\n\n$$\nN_{t+1}=N_{t}e^{r\\left(1-{\\frac {N_{t}}{K}}\\right)}\n$$ where $r = ln(\\lambda)$ and $K$ is the carrying capacity\n\n## Hacking a Ricker model GLM\n\nLinearizing using a log-link (please tell me if I got the math wrong in the comments):\n\n$$\nlog(N_{t+1})=log(N_{t}) + log\\left( (e^r)^{\\left(1-{\\frac {N_{t}}{K}}\\right)}\\right)\n$$\n\n$$\nlog(N_{t+1})=log(N_{t}) + log (e^r)\\times{\\left(1-{\\frac {N_{t}}{K}}\\right)}\n$$\n\n$$\nlog(N_{t+1})= r-\\frac{r}{K}N_{t} + \\textrm{offset}[log(N_{t})]\n$$\n\nWe can model this with the following GLM:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm_rick <- glm(num.wolves ~ num.prev, offset = log(num.prev),\n              family = poisson, data = wolves2)\n```\n:::\n\n\n$r = \\beta_0$\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef(m_rick)[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept) \n  0.3119624 \n```\n:::\n:::\n\n\n$\\beta_1 = -r/K$\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef(m_rick)[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     num.prev \n-0.0001683389 \n```\n:::\n:::\n\n\nWhich means that $K = -\\beta_0/\\beta_1$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n-coef(m_rick)[1]/coef(m_rick)[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept) \n    1853.18 \n```\n:::\n:::\n\n\nðŸ¤¯\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n{{< downloadthis index.Rmd dname=\"index.Rmd\" label=\"Download Rmd\" >}}\n\n\n{{< downloadthis NRMwolves.csv dname=\"NRMwolves.csv\" label=\"Download Data\" >}}\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}