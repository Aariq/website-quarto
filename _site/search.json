[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Eric R. Scott",
    "section": "",
    "text": "Biography\nI’m a Scientific Programmer & Educator at The University of Arizona. I collaborate with researchers in the College of Agriculture and Life Sciences on statistics, data wrangling, and data visualization. The workshops I teach are on a variety or beginner and intermediate data science topics, typically in R. My background is in plant chemical ecology, plant–insect interactions, and plant demography. I’m also a huge tea geek and occasionally do tea science communication.\n\n\n\nInterests\n\nPlant ecology\nStatistics and programming in R\nReproducible research practices\nTea\n\n\n\n\nEducation\n\nPhD in Biology, 2020 Tufts University\nMS in Ecology, Evolution, and Conservation Biology, 2010 University of Illinois at Urbana-Champaign\nBA in Biology, 2006 Whitman College"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Oh for {fs}, are you kidding me, base R?\n\n\n\n\n\n\n\n\n\n\n\n\nJan 5, 2023\n\n\nEric R. Scott\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-01-04-list-files/index.html",
    "href": "posts/2023-01-04-list-files/index.html",
    "title": "Oh for {fs}, are you kidding me, base R?",
    "section": "",
    "text": "This is a cautionary tale about the base R function list.files(). When you give it a vector of paths (which you totally can do), it re-orders the output alphabetically. This screwed me over in a project I’m working on where I took file paths from a data frame, used them to list.files() and assumed (a sane assumption, I think) that the output would be in the same order. In this case, I knew there was only one file per path, but I think I would have assumed this even if it was returning more than one file.\n\ntmp <- tempdir()\ndir.create(file.path(tmp, \"A\"))\ndir.create(file.path(tmp, \"B\"))\ndir.create(file.path(tmp, \"C\"))\nfile.create(file.path(tmp, \"A\", \"A.txt\"))\n\n[1] TRUE\n\nfile.create(file.path(tmp, \"B\", \"B.txt\"))\n\n[1] TRUE\n\nfile.create(file.path(tmp, \"C\", \"C.txt\"))\n\n[1] TRUE\n\nfile_list <- file.path(tmp, c(\"C\", \"A\", \"B\"))\nfile_list #in order C, A, B\n\n[1] \"/var/folders/wr/by_lst2d2fngf67mknmgf4340000gn/T//RtmpKvlGHq/C\"\n[2] \"/var/folders/wr/by_lst2d2fngf67mknmgf4340000gn/T//RtmpKvlGHq/A\"\n[3] \"/var/folders/wr/by_lst2d2fngf67mknmgf4340000gn/T//RtmpKvlGHq/B\"\n\nlist.files(file_list, full.names = TRUE) #in order A, B, C!\n\n[1] \"/var/folders/wr/by_lst2d2fngf67mknmgf4340000gn/T//RtmpKvlGHq/A/A.txt\"\n[2] \"/var/folders/wr/by_lst2d2fngf67mknmgf4340000gn/T//RtmpKvlGHq/B/B.txt\"\n[3] \"/var/folders/wr/by_lst2d2fngf67mknmgf4340000gn/T//RtmpKvlGHq/C/C.txt\"\n\n\nSo I was wrong, and it made all the work I did for the past several months somewhat wrong, but the good news is there is an easy fix. The fs package is the ‘tidy’ solution to working with files and file paths in R. The fs alternative to list.files() is dir_ls(), and like many tidyverse equivalents of base R functions, it is better because it does less. It won’t re-order the outputs and it always assumes you want the full paths (not just the file name as is the default with list.files()).\n\nlibrary(fs)\nfs::dir_ls(file_list) #in correct order C, A, B\n\n/var/folders/wr/by_lst2d2fngf67mknmgf4340000gn/T/RtmpKvlGHq/C/C.txt\n/var/folders/wr/by_lst2d2fngf67mknmgf4340000gn/T/RtmpKvlGHq/A/A.txt\n/var/folders/wr/by_lst2d2fngf67mknmgf4340000gn/T/RtmpKvlGHq/B/B.txt\n\n\nNeedless to say, I’ll be switching over to fs::dir_ls() for this project. I’ll also be spending some more time exploring the fs package and likely using it for all my file exploring and manipulation needs from now on."
  }
]